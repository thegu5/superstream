import Head from "next/head";
import Image from "next/image";
import { Inter } from "next/font/google";
import Item from "@/components/item";
import DayDivider from "@/components/daydivider";
import LeftSidebar from "@/components/sidebar-left";
import RightSidebar from "@/components/sidebar-right";
import Announcement from "@/components/announcement";
import Assignment from "@/components/assignment";
import Material from "@/components/material";
import { useEffect, useState } from "react";
import Typography from "@mui/joy/Typography";
import Divider from '@mui/material/Divider';



export const getServerSideProps = async () => {
  // const baseUrl = process.env.NODE_ENV === 'PRODUCTION' ? 'https://test.com' : 'http://localhost:3000'
  const baseUrl = 'http://localhost:3000'
  const classListRest = await fetch(`${baseUrl}/api/classList`)
  const { classes, err: classErr } = await classListRest.json()

  const res = await fetch(`${baseUrl}/api/classPosts?classes=${classes.map(gClass => gClass.id).join(",")}`);
  const { posts, err: postErr } = await res.json();
  posts.sort((a, b) => {
    let first = new Date(a.dueDate || a.creationTime);
    let second = new Date(b.dueDate || b.creationTime);
    return first > second ? 1 : -1
  })
  const userinfores = await fetch(`${baseUrl}/api/userInfo`).then(res => res.json())
  return { props: { posts, userinfores } }


}
export default function Home({ posts, userinfores }) {
  useEffect(() => {
     window.location.hash = ''
     window.location.hash = (new Date()).toLocaleDateString()
  })
  let lastDay = "";
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <LeftSidebar />
      <RightSidebar userinfores={userinfores} />
      <main
        style={{
          // background: "red",
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
          marginTop: "100px",
          flexDirection: "column",
        }}
      >
        {
          posts.map(post => {
            const date = (post.dueDate || post.creationTime);
            const localDay = new Date(post.dueDate || post.creationTime).toLocaleDateString();
            console.log(post.type)
            switch (post.type) {
              case "classwork":
                console.log('isclasswork')
                if (lastDay !== localDay) {
                  console.log(lastDay);
                  console.log('between')
                  console.log(localDay);
                  lastDay = localDay;
                  console.log(localDay);
                  console.log('between', localDay)
                  console.log(lastDay);
                  return (
                    <>
                      <div style={{
                        margin: 10,
                      }}>
                        <Typography id={localDay} style={{color: "#555E68"}}>{localDay}</Typography>
                        <Divider style={{
                          margin: 10,
                        }} flexItem="true"></Divider>
                      </div>
                      <Assignment key={post.id} data={post} />
                    </>
                  )
                } else {
                  console.log("no.")
                  console.log(typeof localDay + ' ' + localDay.length);
                  console.log(typeof lastDay + ' ' + lastDay.length);
                  return <Assignment key={post.id} data={post} />
                }
              case "material":
                if (lastDay !== localDay) {
                  lastDay = localDay;
                  return (
                    <>
                      <div style={{
                        margin: 10,
                      }}>
                        <Typography id={localDay}  style={{color: "#555E68"}}>{localDay}</Typography>
                        <Divider style={{
                          margin: 10,
                        }} flexItem="true"></Divider>
                      </div>
                      <Material key={post.id} data={post} />
                    </>
                  )
                } else {
                  return <Material key={post.id} data={post} />
                }
              case "announcement":
                if (lastDay !== localDay) {
                  lastDay = localDay;
                  return (
                    <>
                      <div style={{
                        margin: 10,
                      }}>

                        <Typography id={localDay}  style={{color: "#555E68"}}>{localDay}</Typography>
                        <Divider style={{
                          margin: 10,
                        }} flexItem="true"></Divider>
                      </div>
                      <Announcement key={post.id} data={post} />
                    </>
                  )
                } else {
                  return <Announcement key={post.id} data={post} />
                }
              default:
                return <></>
            }
          })
        }
      </main >
    </>
  );
}
